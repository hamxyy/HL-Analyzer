/*
 * generated by Xtext
 */
package com.shs.hl.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;
import com.shs.hl.hearingLanguage.FunctionDeclaration;
import com.shs.hl.hearingLanguage.FunctionKind;
import com.shs.hl.hearingLanguage.Namespace;
import com.shs.hl.hearingLanguage.Using;

/**
 * ´ TODO: provide a meaningful outline view
 */
public class HearingLanguageLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public HearingLanguageLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	String text(Namespace n) {
		return n.getName();
	}

	String text(FunctionDeclaration d) {
		return d.getName();
	}

	String image(Namespace n) {
		if (n.isIsNamespace())
			return "namespace.png";
		return "package.png";
	}

	String image(FunctionDeclaration n) {
		if (n.getKind().equals(FunctionKind.APPLICATION))
			return "domainfunction.png";
		if (n.getKind().equals(FunctionKind.TEST))
			return "testfunction.png";
		if (n.getKind().equals(FunctionKind.PROTECTED))
			return "protectedfunction.png";
		if (n.getKind().equals(FunctionKind.NATIVE))
			return "nativefunction.png";
		return "function.png";
	}

	String image(Using n) {
		return "using.png";
	}

}
