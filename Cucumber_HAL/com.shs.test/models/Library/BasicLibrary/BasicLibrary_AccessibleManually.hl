/*----------------------------------------------------------------------------------------------------------------
//                                 BASIC FUNCTION LIBRARY 	:   AccessibleManually
// Initial version  	                                       							:  	2011-03-14  Cecil Wilson
// Updated Accessible manually by Pushbutton control									:   2011-06-27  Cecil Wilson
// Commented out accessible manually by RCU due to ER49502								:   2011-06-27  Cecil Wilson
// Added println for debug																:   2011-06-29  Cecil Wilson
// Removed workaround for ER49502														:   2011-08-02  Cecil Wilson
// Fixed Error in the control step d8FUctToghpHpEn.HP_valid								:	2011-12-16  Cecil Wilson
// Updated based on peer review															:	2012-06-21	Mang Yew
// ******SIFIT7.2_PEERREVIEWED: Changes as per peer review							    :  2013-07-30 Jenny, Judith
// Added Mini_Tek_Voice_Link to AccessibleManuallyEn_Set_HPx							:  2013-10-18 Jenny
// updated println statement for debugging.											: 2014-01-10 Jenny
// Sifit7.3 Peer review																: 2014-04-15 Jenny, Judith
// Peer Review of Changes during 7.4  - no changes   			                                :2014-12-10 Alastair,Judith 
*/
/*---------------------------------------------------------------------------------------------------------------$$*/
namespace shs_sat
{
	using shs_sat.*;
	package Lib BasicLibrary_AccessibleManually
	{ // All the functions we need can be added in here

	/*$---------------------------------------------------------------------------------------------------------------*/
	//   BASIC LIBRARY Function:    AccessibleManuallyEn_Get_HPx
	//   Input      :  <int> HP = HearingProgram 
	//   Output      :  <int> Current State of AccessibleManually 0 = Off, 1 = On
	//   Description:  Return 0 if Off in the HP, On if On in the HP
	/*-----------------------------------------------------------------------------------------------------------------$*/
		public function int AccessibleManuallyEn_Get_HPx (int HP) //SIFIT7.3PEERREVIEWED
		{
 			if (HP == 0)
			{ // For HP0, Accessible manually depends only on RCU 	
 				if (hi:d8FUctRcuAbsHpEn [ HP ] == d8FUctRcuAbsHpEn.enable)
				{
					println ('[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Get_HPx: returns ON (based on Rcu) for HP:' + HP);
					return 1;
				}
				else{
					println ('[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Get_HPx: returns OFF (based on Rcu) for HP:' + HP);
					return 0;
				}
			}
			else // For HP>HP0, Accessible manually depends on Pushbutton (TogHp)
			{
				if (hi:d8FUctToghpHpEn [ HP - 1 ] == d8FUctToghpHpEn.HP_valid)
				{
					println ('[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Get_HPx: returns ON (based on TogHp) for HP:' + HP);
					return 1;
				}
				else{
					println ('[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Get_HPx: returns OFF (based on TogHp) for HP:' + HP);
					return 0;
				}
			}
		} // close BasicLibrary_AccessibleManually.AccessibleManuallyEn_Get_HPx	

		/*$---------------------------------------------------------------------------------------------------------------*/
		//   BASIC LIBRARY Function:    AccessibleManuallyEn_Set_HPx
		//   Input      :  <int> HP = HearingProgram, <int> CxxPos = Position, 1 = on, 0 = off
		//   Output      :  none 
		//   Description: Sets the AccessibleManually for the HearingProgram to  1 = On, 0 = Off
		/*-----------------------------------------------------------------------------------------------------------------$*/
		public function void AccessibleManuallyEn_Set_HPx (int HP, int CxxPos) //SIFIT7.3PEERREVIEWED
		{
			if (CxxPos == 1)
			{ // Enabled Accessible manually
				
				// HearingProgram accessible PushButton 
				if (HP > 0)
				{ // Hearing Program 1 always accessible by Pushbutton
 					hi:d8FUctToghpHpEn [ HP - 1 ] = d8FUctToghpHpEn.HP_valid;
					// Pushbutton control does not exist for HP1.. so Starts with HP2 ie env:Prog==1  i.e, so HP2 index = [0]  

					println ("[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Set_HPx: Pushbutton access Enabled for HP" + HP);
				}

				// HearingProgram accessible RCU				
				hi:d8FUctRcuAbsHpEn [ HP ] = d8FUctRcuAbsHpEn.enable;
				
				println ("[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Set_HPx: RCU access Enabled for HP" + HP);
			}
			else
			{ // Disable Accessible manually

				// HearingProgram accessible PushButton
				if (HP > 0)
				{ // Hearing Program 1 always accessible by Pushbutton
 					hi:d8FUctToghpHpEn [ HP - 1 ] = d8FUctToghpHpEn.HP_not_valid;
					println ("[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Set_HPx: Pushbutton access Disabled for TEKs pgm HP" + HP);
				}

				// HearingProgram accessible RCU				
				if (hi:d8SwMacroInputModeHp == d8SwMacroInputModeHp.Tek_d_miniTek ||
						hi:d8SwMacroInputModeHp == d8SwMacroInputModeHp.miniTek_Telecoil ||
						hi:d8SwMacroInputModeHp == d8SwMacroInputModeHp.MiniTek_FM || 
						hi:d8SwMacroInputModeHp == d8SwMacroInputModeHp.Mini_Tek_Voice_Link)
				{// For TEK Transmitter, MiniTek SpeechLink, MiniTek FM, MiniTek Tcoil, disable Push Button Access only
					hi:d8FUctRcuAbsHpEn [ HP ] = d8FUctRcuAbsHpEn.enable;
				}
				else
				{ //Bluetooth, Telecoil and other modes disable Both Pushbutton and RCU access
					hi:d8FUctRcuAbsHpEn [ HP ] = d8FUctRcuAbsHpEn.off;
					println ("[HAL]:BLIB.AccessibleManually-AccessibleManuallyEn_Set_HPx: RCU access Disabled for HP" + HP);
				}
			}
		} // close BasicLibrary_AccessibleManually.AccessibleManuallyEn_Set_HPx

/*----------------------------------------------------------------------------------------------------------------
// 								  END Of BASIC FUNCTION  LIBRARY  Accessible Manually 
-----------------------------------------------------------------------------------------------------------------*/
	} //package BasicLibrary_AccessibleManually

} //namespace shs.sat