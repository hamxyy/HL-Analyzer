/*-----------------------------------------------------------------------------------------------------------------*
//                                 MID LEVEL LIBRARY - Program Selection

// Initial version  	                                       								:	2012-04-03 Cecil Wilson
// Updated criteria for Autophone devices and comments										:	2012-04-04 Cecil Wilson
// Updated Ps:Tinnitus visibility															:	2012-04-04 Cecil Wilson
// Updated general programs visibility (Cxx to take care of HP2-6)							:	2012-04-16 Cecil Wilson
// Updated based on Cxx7 requirements,no more automatic 
// program based additional Listening situations											:	2012-04-19 Cecil Wilson
// updated the ProgramSelection_IsVisible for AudioshoeAvailable to none and return false.	:	2012-04-23 Jenny Lin 
// Updated based on peer review																:	2012-06-27 Frauke, Jenny and co
// *********************************************CODE FREEZE*******************************************************
// Updated ProgramSelection_IsVisible for custom devices									:	2012-10-15 Mang Yew
// Updated ProgramSelection IsVisible for custom devices									:	2012-11-20 Mang Yew
// Updated ProgramSelection due to peer review												:	2013-01-02 Mang Yew
// ProgramID changed in respect to GetID of program, update comments						:	2013-10-23 Sonia Stasiak
// Added IsEnabled function																	:	2013-11-01 Sonia Stasiak
// Added new Tcoil programs																	:	2014-03-18 Sonia Stasiak
// Added new Induction Loop (T) program														:	2014-07-30 Sonia
// Peer Review of Changes during 7.4  		   			                           	 :2014-12-09 Sonia,Judith
//-----------------------------------------------------------------------------------------------------------------*/
namespace shs_sat 
{
	using shs_sat.*;
	package  Lib Mid_Level_Library_ProgramSelection
	{
	/*---------------------------------------------------------------------------------------------------------*
	//	MID LEVEL LIBRARY - ProgramSelection_GeneralProgram_IsVisible
	//	Input		:	-
	//	Output		:	<bool> true = visible; false = not visible
	//	Description	:	Function decides about visibility of general listening situation based on device category.
	//	General Programs	:   
	//					- Noisy Environment		- Outdoor/Sport		
	//					- Music					- Privacy
	//					- TV 
	/*---------------------------------------------------------------------------------------------------------*/
		public function bool ProgramSelection_GeneralProgram_IsVisible() //PEER REVIEWED CXX7.3
		// Visible if HICategory is not ITE. 
		// If HICategory = ITE, device must have pushbutton or RCU.		
		{
			bool retval= false;
			string HiCategory = Mid_Level_Library_Hi_Category.Check_Hi_Category();
			string usercontrol = Mid_Level_Library_UserControl.Check_For_UserControl();	
														 
			if(HiCategory == "ITE")
			{
				 	if((usercontrol != "NoUserCtrl" && usercontrol != "RockerSwt") || 
				 		cap:WlsUserControl == WlsUserControl.e2eRCU || 
				 		cap:WlsUserControl == WlsUserControl.RCU)
				 	{
				 		retval = true;		 		
				 	}
				 }
			else
			{
				retval = true;
			}
			
			return retval;
		} // closes Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible


	/*---------------------------------------------------------------------------------------------------------*
	//	MID LEVEL LIBRARY - ProgramSelection_IsVisible
	//	Input		:	<int> ProgramID 
	//	Output		:	<bool> true = visible; false = not visible
	//	Description	:	Function decides about visibility of listening situation based on device capabilities. 
	//	Program ID	:   
	//				:	2 = Noisy Environment		7 = TV						12 = Tek/miniTek		20 = Phone T
	//				:	3 = Phone(Acoustically)		8 = Outdoor/Sport			13 = miniTek FM			21 = Induction Loop (T)		
	//				:	4 = Phone mT				9 = Privacy					14 = miniTek Telecoil
	//				:	5 = Bluetooth Phone			10 = Tinnitus				15 = Audio Input
	//				:	6 = Music					11 = Induction Loop (mT)	19 = Phone MT
	//	Comments	:	Variable int (ProgramID) starts with ID 2, respectively to ID of each program.
	/*---------------------------------------------------------------------------------------------------------*/		
		public function bool ProgramSelection_IsVisible(int ProgramID) //PEER REVIEWED CXX7.3
		{
			bool retval= false;
			  
			switch(ProgramID)
			{
				case 2:{ // Noisy Environment
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.					 
					retval = Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible();
				}
				
				case 3:{ // Phone (Acoustically)
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU or Autocoil.
  					 if(Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible() || 
  					 	cap:AutocoilAvailable == AutocoilAvailable.exists)
  					 {
  					 	retval = true;
  					 }
				}
					 										
				case 4:{ // Phone mT
				// Visible if Telecoil exist.
					 if(cap:TelecoilAvailable == TelecoilAvailable.exists)
					 {
					 	retval = true;  
					 }				  
				}	
										
				case 5:{ // Bluetooth Phone
				// Visible if Wireless Phone exist.
					 if(cap:WlsPhone == WlsPhone.exists)
					 {
					 	retval = true;
					 } 
				}	
							
				case 6:{ // Music
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.
					 retval = Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible();
				}
									
				case 7:{ // TV
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.
					  retval = Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible();
				}
				
				case 8:{ // Outdoor Sport
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.
					  retval = Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible();
				}
				
				case 9:{ // Privacy
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.
					 retval = Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible();
				}
				
				case 10:{ // Tinnitus
				// Visible if Tinnitus masker available.
				// Visible if HICategory is not ITE. If HICategory = ITE, device must have pushbutton or RCU.
					if(cap:TinMaskerAvailable == TinMaskerAvailable.MaskerAvailable && 
						Mid_Level_Library_ProgramSelection.ProgramSelection_GeneralProgram_IsVisible())
						{
							retval = true;
						}
				}
				
				case 11:{ // Induction Loop (mT)
				// Visible if Telecoil exist.
					 if(cap:TelecoilAvailable == TelecoilAvailable.exists)
					 {
					 	retval = true;  
					 }
				}
				
				case 12:{ // Tek/miniTek
				// Visible if Wireless Audio (Tek/miniTek) exist.
					 if(cap:WlsAudio == WlsAudio.exists)
					 {
					 	retval = true;
					 }  
				}
				
				case 13:{ // miniTek FM
				// Visible if Wireless Audio (Tek/miniTek) exist.
					 if(cap:WlsAudio == WlsAudio.exists)
					 {
					 	retval = true;
					 }  
				}

				case 14:{ // miniTek Telecoil
				// Visible if Wireless Audio (Tek/miniTek) exist.
					 if(cap:WlsAudio == WlsAudio.exists)
					 {
					 	retval = true;
					 }  
				}
				
				case 15:{ // Audio Input
				// Visible if Audio Shoe exist.
					 if(cap:AudioshoeAvailable == AudioshoeAvailable.exists)
					 {
						 retval = true; 					
					}
				}
				
				case 19:{ // Phone MT
				// Visible if Telecoil exist.
					 if(cap:TelecoilAvailable == TelecoilAvailable.exists)
					 {
					 	retval = true;  
					 }				  
				}
				
				case 20:{ // Phone T
				// Visible if Telecoil exist.
					 if(cap:TelecoilAvailable == TelecoilAvailable.exists)
					 {
					 	retval = true;  
					 }				  
				}
				
				case 21:{ // Induction Loop (T)
				// Visible if Telecoil exist.
					 if(cap:TelecoilAvailable == TelecoilAvailable.exists)
					 {
					 	retval = true;  
					 }
				}		
				
				default:{
					println('[HAL]: MLIB ProgramSelection_IsVisible - no valid program ID!');
				}
			} // closes switch(ProgramID) 
			 	 			
			return retval;
	 	} // closes Mid_Level_Library_ProgramSelection.ProgramSelection_IsVisible
	 	
	/*---------------------------------------------------------------------------------------------------------*
	//	MID LEVEL LIBRARY - ProgramSelection_IsEnabled
	//	Input		:	<int> ProgramID 
	//	Output		:	<bool> true = enabled; false = not enabled (greyed-out)
	//	Description	:	Function decides about enabling of listening situation based on device capabilities. 
	//	Program ID	:   
	//				:	2 = Noisy Environment		7 = TV						12 = Tek/miniTek		20 = Phone T
	//				:	3 = Phone(Acoustically)		8 = Outdoor/Sport			13 = miniTek FM			21 = Induction Loop (T)		
	//				:	4 = Phone mT				9 = Privacy					14 = miniTek Telecoil
	//				:	5 = Bluetooth Phone			10 = Tinnitus				15 = Audio Input
	//				:	6 = Music					11 = Induction Loop (mT)	19 = Phone MT
	//	Comments	:	Variable int (ProgramID) starts with ID 2, respectively to ID of each program.
	/*---------------------------------------------------------------------------------------------------------*/	 	
	 	
	public function bool ProgramSelection_IsEnabled (int ProgramID) //PEER REVIEWED CXX7.3
	{
		bool retval = false;
		switch (ProgramID)
		{
		case 5:{ // Bluetooth Phone
			retval = Mid_Level_Library_InputMode.Is_available_Inputmode_BluetoothPhone ();
		}
		case 12:{ // Tek/miniTek
			retval = Mid_Level_Library_InputMode.Is_available_Inputmode_Tek_MiniTek ();
		}
		case 13:{ // miniTek FM
			retval = Mid_Level_Library_InputMode.Is_available_Inputmode_MiniTekFM ();
		}
		case 14:{ // miniTek Telecoil
			retval = Mid_Level_Library_InputMode.Is_available_Inputmode_MiniTekTelecoil ();
		}
		default :{
		// For Program ID 2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 19, 20, 21 IsEnabled is TRUE
		
			retval = true;
			}
		}
		return retval;
		
	}	// closes Mid_Level_Library_ProgramSelection.ProgramSelection_IsEnabled
			
	} // closes package Mid_Level_Library_ProgramSelection
	
} // closes namespace shs.sat
/*------------------------------------------------------------------------------------------------------------------
// 								  END of MID LEVEL  LIBRARY  - Program Selection 
-------------------------------------------------------------------------------------------------------------------*/