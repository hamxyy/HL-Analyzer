/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                        Basic Tuning: BasicTuning_LoudSoundsDownBu
// Initial Version                						     						:2011-08-18 Chuah LayYuan
// Updated SetPos and IsEnable														:2011-11-21	Frauke Schall
// Updated SetPos (3dB broadband, partial: for test purposes)						:2012-01-13 Frauke Schall
// Updated SetPos (3dB broadband, complete: for test purposes)						:2012-01-18 Frauke Schall
// Updated IsEnabled (grey out if curve cannot be applied)							:2012-02-01 Frauke Schall
// Added println in IsEnabled														:2012-02-10	Frauke Schall
// *********************************************CODE FREEZE*******************************************************
// FR68941 to disable Basic Tuning Button when tinnitus is ON and Pure				:2014-09-02 Mang Yew
// Peer Review of Changes during 7.4                                                 :2014-12-10 Frauke,Judith
*/
/*---------------------------------------------------------------------------------------------------------------*/
namespace shs_sat
{
	using shs_sat.*;
	package Lib Test_While
	{
	//		public function int getOne ()
	//		{
	//			return 1;
	//		} // closes MixedMode BasicTuning_LoudSoundsDownBu
	//		public function void setConnexxFitEn (int on)
	//		{
	//			if (on == 1)
	//			{
	//				hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.off;
	//				int i = 1;
	//			}
	//			else
	//			{
	//				hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.on;
	//			}
	//			i = 0;
	//		}
		public function int maxpos ()
		{
			int retVal = -1;
			if (cap:PricePoint == PricePoint.PP700)
			{
				retVal = 7;
			}
			if (cap:PricePoint == PricePoint.PP500)
			{
				retVal = 5;
			}
			if (cap:PricePoint == PricePoint.PP300)
			{
				retVal = 3;
			}
			if (cap:PricePoint == PricePoint.PP200)
			{
				retVal = 2;
			}
			if (cap:PricePoint == PricePoint.PP100)
			{
				retVal = 1;
			}
			return retVal;
		}
		public function void testWhile ()
		{
			int pp = -1;
			int x = 1;
			while (x <= 10)
			{
				if (x == maxpos ())
				{
					pp = x;
				}
				++ x;
			}
			switch (pp)
			{
				case 1:{
					hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.off;
				}
				case 2:{
					hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.off;
				}
				case 3:{
					hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.off;
				}
				case 5:{
					hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.on;
				}
				case 7:{
					hi:d8SwMacroConnexxFitEn = d8SwMacroConnexxFitEn.on;
				}
			}
		}
	}
} //namespace shs.sat
// end of file